{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/Services/employee-service.service.ts","webpack:///./ClientApp/app/app-routing.module.ts","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","import { Injectable,Inject } from '@angular/core';\nimport { Router } from '@angular/router'; \nimport { HttpClient,HttpHeaders,HttpParams,HttpResponse} from '@angular/common/http'; \nimport { Observable } from 'rxjs';\nimport {map,catchError} from 'rxjs/operators';  \nimport { error } from 'util';\nimport { Employee } from '../employee';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeServiceService {\n    baseUrl: string = \"\";\n    \n    constructor(private _http: HttpClient, @Inject('BASE_URL') myAppUrl: string) {\n        this.baseUrl = myAppUrl;\n    }\n \n    getEmployees(): Observable<any> {  \n     \n        return this._http.get<any>(this.baseUrl + 'api/Employee/Index');\n    }  \n    SaveEmployee(em:any): Observable<Employee> {\r\n        const body = em;\r\n        const headers = new HttpHeaders().set('content-type', 'application/json');\r\n        return this._http.post<Employee>(this.baseUrl +'api/Employee/Create', body, {\r\n            headers\r\n        });\r\n    }\n\n    deleteItem(em): Observable<Employee> {\r\n        return this._http.delete<Employee>(this.baseUrl + 'api/Employee/Delete/' + em);\r\n    }\n\n    updateItem(em: any,Userid): Observable<Employee> {\r\n        const body = em;\r\n        const headers = new HttpHeaders().set('content-type', 'application/json');\r\n        return this._http.post<Employee>(this.baseUrl + 'api/Employee/Edit/'+Userid, body, {\r\n            headers\r\n        });\r\n    }\n\n\nerrorHandler(error: Response) {  \n  console.log(error);  \n  return Observable.throw(error);  \n}  \n\n  }\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\r\n    <div class=\"loading-screen-wrapper\" *ngIf=\"loading\">\r\n        <div class=\"loading-screen-icon\">\r\n            Loading...\r\n        </div>\r\n    </div>\r\n    <div class=\"card bg-light\">\r\n        <article class=\"card-body mx-auto\" style=\"max-width: 400px;\">\r\n            <h4 class=\"card-title mt-3 text-center\">Rohit Temp Demo Work</h4>\r\n            <p class=\"text-center\">Get started with your free account</p>\r\n\r\n            <form [formGroup]=\"Login\" autocomplete=\"off\" >\r\n                <div *ngIf=\"sucess\" style=\"font-size: medium;font-weight: bold;color: red; \" role=\"alert\">Your Form is Valid</div>\r\n                <div class=\"form-group input-group\" [ngClass]=\"displayFieldCss('FullName')\">\r\n                    <!--<input style=\"display:none\" type=\"text\" formControlName=\"flag\" name=\"flag\" class=\"form-control\" />\r\n                    <input style=\"display:none\" type=\"text\" formControlName=\"empid\" name=\"empid\" class=\"form-control\">-->\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\"> <i class=\"fa fa-user\"></i> </span>\r\n                    </div>\r\n                    <input required name=\"Fullname\" class=\"form-control a\" formControlName=\"FullName\"\r\n                           placeholder=\"Full name\" type=\"text\">\r\n\r\n                </div> <!-- form-group// -->\r\n                <div class=\"form-group input-group\" [ngClass]=\"displayFieldCss('Email')\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\"> <i class=\"fa fa-envelope\"></i> </span>\r\n                    </div>\r\n                    <input name=\"Email\" class=\"form-control\" formControlName=\"Email\" #Email placeholder=\"Email address\" type=\"email\" >\r\n                    <!--  <div *ngIf=\"submitted && Login.controls.Email.errors\"  class=\"form-group input-group\">\r\n                          <div class=\"input-group-prepend\">\r\n                              <div *ngIf=\"submitted && Login.controls.Email.errors.required\" style=\"font-size: medium;font-weight: bold;color: red; \" role=\"alert\">Email Validated</div>\r\n                          </div>\r\n                      </div>-->\r\n                </div> <!-- form-group// -->\r\n                <!-- form-group// -->\r\n                <!-- form-group end.// -->\r\n                <div class=\"form-group input-group\" [ngClass]=\"displayFieldCss('Password')\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\"> <i class=\"fa fa-lock\"></i> </span>\r\n                    </div>\r\n                    <input class=\"form-control\" name=\"Password\" formControlName=\"Password\" #Password placeholder=\"Create password\" type=\"password\">\r\n                    <!--\r\n                    <div *ngIf=\"submitted && Login.controls.Password.errors\"  class=\"form-group input-group\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <div *ngIf=\"submitted && Login.controls.Password.errors.required\" style=\"font-size: medium;font-weight: bold;color: red; \" role=\"alert\">Password is vaalidated</div>\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"form-group input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\"> <button style=\"width: fit-content;\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary btn-block\"> Save</button> </span>\r\n                    </div>\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\">  <button [disabled]=\"buttonDisabled1\" style=\"width: fit-content;\" type=\"submit\" (click)=\"deleteEmp();\" class=\"btn btn-primary btn-block\"> Delete</button> </span>\r\n                    </div>\r\n                </div> <!-- form-group// -->\r\n                <!-- form-group// -->\r\n                <div class=\"form-group\" *ngIf=\"Show\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                        <th style=\"display: none;\"></th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Password</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let data of employee ; index as i\" (dblclick)=\"onRowClicked(data)\" (click)=\"setClickedRow(i)\" [class.active]=\"i == selectedRow\">\r\n                                <td style=\"display: none;\">{{data.EmpId }}</td>\r\n                                <td>{{data.FullName }}</td>\r\n                                <td>{{data.Email }}</td>\r\n                                <td>{{data.Password }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </form>\r\n        </article>\r\n    </div> <!-- card.// -->\r\n\r\n</div> ","import { Component, OnInit,Inject } from '@angular/core';\r\nimport {FormGroup, Validators, FormControl,FormBuilder} from '@angular/forms'\r\nimport { UrlSegment } from '@angular/router';\r\nimport { Observable } from 'rxjs'; \r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {EmployeeServiceService} from './Services/employee-service.service'\r\nimport { Employee } from './employee';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    Login: FormGroup; employee: Employee; Emplist = []; buttonDisabled1: boolean = true;  submitted = false; sucess = false; Show = true;\r\n    Temp: number = 1; Userid: number = 0; loading: boolean = false;\r\n    message: string;\r\n    setClickedRow: Function;\r\n    games: [{\r\n        FullName: string,\r\n        Email: string,\r\n        Password: string\r\n    }];\r\n    constructor(private formBuilder: FormBuilder,private _employeeService: EmployeeServiceService) { \r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n      this.Login = this.formBuilder.group ({\r\n          FullName: ['', Validators.required],\r\n          Email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n          Password: ['', Validators.required]\r\n          \r\n        });\r\n        this.setClickedRow = function (index) {\r\n            this.selectedRow = index;\r\n        }\r\n        this.AllEmployee();\r\n        \r\n  }\r\n  isFieldValid(field: string) {\r\n    return !this.Login.get(field).valid && this.Login.get(field).touched;\r\n  }\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'validate': this.isFieldValid(field),\r\n   };\r\n  }\r\n    AllEmployee() {\r\n        this.loading = true;\r\n        this._employeeService.getEmployees().\r\n            subscribe((data) => {\r\n               this.employee=data.Table;\r\n            });\r\n      // console.log(sessionStorage.getItem('ID'));\r\n       this.loading = false;\r\n    }\r\n\r\n    \r\n\r\n    SaveEmployee() {\r\n        this._employeeService.SaveEmployee(JSON.stringify(this.Login.value)).subscribe(\r\n            (data) => {\r\n                this.employee = data;\r\n                if (this.employee.Flag = 1) {\r\n                    sessionStorage.setItem('ID',  this.employee.Flag.toString());\r\n                    this.message = 'Record saved Successfully';\r\n                    alert(this.message);\r\n                }\r\n                else {\r\n                    this.message = 'Invalid Credential';\r\n                    alert(this.message);\r\n                }\r\n                this.Login.reset();\r\n                this.AllEmployee();  \r\n            }\r\n        )\r\n    }\r\n    onRowClicked(data: any) {\r\n        const Currentrowid = this.Login.value;\r\n        this.Userid=data.EmpId;\r\n        this.Login.controls['FullName'].setValue(data.FullName);\r\n        this.Login.controls['Email'].setValue(data.Email);\r\n        this.Login.controls['Password'].setValue(data.Password);\r\n        this.buttonDisabled1 = false;\r\n        this.Temp = 2;\r\n    }\r\n    deleteEmp() {\r\n        \r\n\r\n        this._employeeService.deleteItem(this.Userid).subscribe(() => {\r\n            if (this.employee.Flag = 1) {\r\n                this.message = 'Record deleted Successfully';\r\n                alert(this.message);\r\n                this.AllEmployee();\r\n                this.Login.reset();\r\n                this.buttonDisabled1 = true;\r\n            }\r\n            else {\r\n                this.message = 'Invalid Credential';\r\n                alert(this.message);\r\n            }\r\n        });\r\n    }\r\n    updateItem() {\r\n        this._employeeService.updateItem(JSON.stringify(this.Login.value), this.Userid).subscribe(\r\n            (data) => {\r\n                if (this.employee.Flag = 1) {\r\n                    this.message = 'Record updated Successfully';\r\n                    alert(this.message);\r\n                    this.AllEmployee();\r\n                    this.buttonDisabled1 = true;\r\n                }\r\n                else {\r\n                    this.message = 'Invalid Credential';\r\n                    alert(this.message);\r\n                }\r\n                this.employee = data;\r\n                this.Emplist = this.employee.dataList;\r\n                this.Login.reset();\r\n            }\r\n        )\r\n    }\r\n    onSubmit() {\r\n        \r\n this.submitted=true;\r\n if (this.Login.valid) {\r\n  //this.sucess=true;\r\n  const datat = this.Login.value;\r\n     if (this.Temp == 1) {\r\n         this.SaveEmployee();\r\n\r\n     }\r\n    else {\r\n         this.updateItem();\r\n   }\r\n  \r\n} else {\r\n  \r\n  this.validateAllFormFields(this.Login); \r\n}\r\n  }\r\n  validateAllFormFields(formGroup: FormGroup) {    \r\n    Object.keys(formGroup.controls).forEach(field => { \r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFormFields(control);\r\n      }\r\n    });\r\n  }\r\n   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {EmployeeServiceService} from './Services/employee-service.service' \nimport { CommonModule } from '@angular/common'; \r\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n      AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n      CommonModule,\n      HttpClientModule\n\n\n  ],\n    providers: [EmployeeServiceService, { provide: 'BASE_URL', useFactory: getBaseUrl }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nexport function getBaseUrl() {\r\n    return document.getElementsByTagName('base')[0].href;\r\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}